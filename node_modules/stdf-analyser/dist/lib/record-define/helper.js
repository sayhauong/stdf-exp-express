"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeRecord = void 0;
const ATR_1 = __importDefault(require("./ATR"));
const _1 = require(".");
const BPS_1 = __importDefault(require("./BPS"));
const DTR_1 = __importDefault(require("./DTR"));
const EPS_1 = __importDefault(require("./EPS"));
const FAR_1 = __importDefault(require("./FAR"));
const FTR_1 = __importDefault(require("./FTR"));
const GDR_1 = __importDefault(require("./GDR"));
const HBR_1 = __importDefault(require("./HBR"));
const MIR_1 = __importDefault(require("./MIR"));
const MPR_1 = __importDefault(require("./MPR"));
const MRR_1 = __importDefault(require("./MRR"));
const PCR_1 = __importDefault(require("./PCR"));
const PGR_1 = __importDefault(require("./PGR"));
const PIR_1 = __importDefault(require("./PIR"));
const PLR_1 = __importDefault(require("./PLR"));
const PMR_1 = __importDefault(require("./PMR"));
const PRR_1 = __importDefault(require("./PRR"));
const PTR_1 = __importDefault(require("./PTR"));
const R180_1 = __importDefault(require("./R180"));
const R181_1 = __importDefault(require("./R181"));
const RDR_1 = __importDefault(require("./RDR"));
const SBR_1 = __importDefault(require("./SBR"));
const SDR_1 = __importDefault(require("./SDR"));
const TSR_1 = __importDefault(require("./TSR"));
const UKN_1 = __importDefault(require("./UKN"));
const WCR_1 = __importDefault(require("./WCR"));
const WIR_1 = __importDefault(require("./WIR"));
const WRR_1 = __importDefault(require("./WRR"));
function makeRecord(type, sub) {
    switch (type) {
        case _1.RecordType.REC_TYPE_0:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new FAR_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new ATR_1.default();
            }
        case _1.RecordType.REC_TYPE_1:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new MIR_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new MRR_1.default();
                case _1.RecordSub.REC_SUB_30:
                    return new PCR_1.default();
                case _1.RecordSub.REC_SUB_40:
                    return new HBR_1.default();
                case _1.RecordSub.REC_SUB_50:
                    return new SBR_1.default();
                case _1.RecordSub.REC_SUB_60:
                    return new PMR_1.default();
                case _1.RecordSub.REC_SUB_62:
                    return new PGR_1.default();
                case _1.RecordSub.REC_SUB_63:
                    return new PLR_1.default();
                case _1.RecordSub.REC_SUB_70:
                    return new RDR_1.default();
                case _1.RecordSub.REC_SUB_80:
                    return new SDR_1.default();
            }
        case _1.RecordType.REC_TYPE_2:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new WIR_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new WRR_1.default();
                case _1.RecordSub.REC_SUB_30:
                    return new WCR_1.default();
            }
        case _1.RecordType.REC_TYPE_5:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new PIR_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new PRR_1.default();
            }
        case _1.RecordType.REC_TYPE_10:
            switch (sub) {
                case _1.RecordSub.REC_SUB_30:
                    return new TSR_1.default();
            }
        case _1.RecordType.REC_TYPE_15:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new PTR_1.default();
                case _1.RecordSub.REC_SUB_15:
                    return new MPR_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new FTR_1.default();
            }
        case _1.RecordType.REC_TYPE_20:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new BPS_1.default();
                case _1.RecordSub.REC_SUB_20:
                    return new EPS_1.default();
            }
        case _1.RecordType.REC_TYPE_50:
            switch (sub) {
                case _1.RecordSub.REC_SUB_10:
                    return new GDR_1.default();
                case _1.RecordSub.REC_SUB_30:
                    return new DTR_1.default();
            }
        case _1.RecordType.REC_TYPE_180:
            return new R180_1.default();
        case _1.RecordType.REC_TYPE_181:
            return new R181_1.default();
        default:
            return new UKN_1.default();
        // throw 
    }
}
exports.makeRecord = makeRecord;
