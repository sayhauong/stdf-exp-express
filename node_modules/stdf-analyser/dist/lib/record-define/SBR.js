"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_define_1 = require("../data-define");
const _1 = require(".");
function ValueNotes_SBIN_PF() {
    switch (this.value) {
        case 'P':
            return 'PassingBin';
        case 'F':
            return 'FailingBin';
        case ' ':
            return 'Unknown';
        default:
            return this.value.toString();
    }
}
class SBRRecord extends _1.RecordBase {
    constructor() {
        super('SBR', _1.RecordType.REC_TYPE_1, _1.RecordSub.REC_SUB_50, 'Software Bin Record');
        this.addField(new data_define_1.UInt8Data('HEAD_NUM', 'Test head number'));
        this.addField(new data_define_1.UInt8Data('SITE_NUM', 'Test site number'));
        this.addField(new data_define_1.UInt16Data('SBIN_NUM', 'Software bin number'));
        this.addField(new data_define_1.UInt32Data('SBIN_CNT', 'Number of parts in bin'));
        this.addField(new data_define_1.FixedStringData('SBIN_PF', 'Pass/fail indication', ValueNotes_SBIN_PF, 1));
        this.addField(new data_define_1.VariableStringData('SBIN_NAM', 'Name of software bin'));
    }
}
exports.default = SBRRecord;
