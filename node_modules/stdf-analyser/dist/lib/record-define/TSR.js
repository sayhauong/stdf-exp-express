"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_define_1 = require("../data-define");
const _1 = require(".");
function ValueNotes_TEST_TYP() {
    switch (this.value) {
        case 'P':
            return 'Parametric test';
        case 'F':
            return 'Functional test';
        case 'M':
            return 'Multi-result parametric test';
        default:
            return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
}
function ValueNotes_U4() {
    if (this.value === 4, 294, 967, 295) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
class TSRRecord extends _1.RecordBase {
    constructor() {
        super('TSR', _1.RecordType.REC_TYPE_10, _1.RecordSub.REC_SUB_30, 'Test Synopsis Record');
        this.addField(new data_define_1.UInt8Data('HEAD_NUM', 'Test head number'));
        this.addField(new data_define_1.UInt8Data('SITE_NUM', 'Test site number'));
        this.addField(new data_define_1.FixedStringData('TEST_TYP', 'Test type', ValueNotes_TEST_TYP, 1));
        this.addField(new data_define_1.UInt32Data('TEST_NUM', 'Test number'));
        this.addField(new data_define_1.UInt32Data('EXEC_CNT', 'Number of test executions', ValueNotes_U4));
        this.addField(new data_define_1.UInt32Data('FAIL_CNT', 'Number of test failures', ValueNotes_U4));
        this.addField(new data_define_1.UInt32Data('ALRM_CNT', 'Number of alarmed tests', ValueNotes_U4));
        this.addField(new data_define_1.VariableStringData('TEST_NAM', 'Test name'));
        this.addField(new data_define_1.VariableStringData('SEQ_NAME', 'Sequencer (program segment/flow) name'));
        this.addField(new data_define_1.VariableStringData('TEST_LBL', 'Test label or text'));
        this.addField(new data_define_1.UInt8Data('OPT_FLAG', 'Optional data flag'));
        this.addField(new data_define_1.FloatData('TEST_TIM', 'Average test execution time in seconds'));
        this.addField(new data_define_1.FloatData('TEST_MIN', 'Lowest test result value'));
        this.addField(new data_define_1.FloatData('TEST_MAX', 'Highest test result value'));
        this.addField(new data_define_1.FloatData('TST_SUMS', 'Sum of test result values'));
        this.addField(new data_define_1.FloatData('TST_SQRS', 'Sum of squares of test result values'));
    }
}
exports.default = TSRRecord;
