"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_define_1 = require("../data-define");
const _1 = require(".");
function ValueNotes_CHAN_TYP() {
    if (this.value === 0) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
function ValueNotes_HEAD_NUM() {
    if (this.value === 1) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
function ValueNotes_SITE_NUM() {
    if (this.value === 1) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
class PMRRecord extends _1.RecordBase {
    constructor() {
        super('PMR', _1.RecordType.REC_TYPE_1, _1.RecordSub.REC_SUB_60, 'Pin Map Record');
        this.addField(new data_define_1.UInt16Data('PMR_INDX', 'Unique index associated with pin'));
        this.addField(new data_define_1.UInt16Data('CHAN_TYP', 'Channel type', ValueNotes_CHAN_TYP));
        this.addField(new data_define_1.VariableStringData('CHAN_NAM', 'Channel name'));
        this.addField(new data_define_1.VariableStringData('PHY_NAM', 'Physical name of pin'));
        this.addField(new data_define_1.VariableStringData('LOG_NAM', 'Logical name of pin'));
        this.addField(new data_define_1.UInt8Data('HEAD_NUM', 'Head number associated with channel', ValueNotes_HEAD_NUM));
        this.addField(new data_define_1.UInt8Data('SITE_NUM', 'Site number associated with channel', ValueNotes_SITE_NUM));
    }
}
exports.default = PMRRecord;
