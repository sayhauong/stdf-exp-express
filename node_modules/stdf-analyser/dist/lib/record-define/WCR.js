"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_define_1 = require("../data-define");
const _1 = require(".");
function ValueNotes_WF_UNITS() {
    switch (this.value) {
        case 0:
            return _1.FIELD_VALUE_INVALID_DEFAULT;
        case 1:
            return 'inch';
        case 2:
            return 'cm';
        case 3:
            return 'mm';
        case 4:
            return 'm';
        default:
            return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
}
function ValueNotes_WF_FLAT() {
    switch (this.value) {
        case 'U':
            return 'Up';
        case 'D':
            return 'Down';
        case 'L':
            return 'Left';
        case 'R':
            return 'Right';
        default:
            return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
}
function ValueNotes_R4() {
    if (this.value === 0) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
function ValueNotes_I2() {
    if (this.value === -32768) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
class WCRRecord extends _1.RecordBase {
    constructor() {
        super('WCR', _1.RecordType.REC_TYPE_2, _1.RecordSub.REC_SUB_30, 'Wafer Configuration Record');
        this.addField(new data_define_1.FloatData('WAFR_SIZ', 'Diameter of wafer in WF_UNITS', ValueNotes_R4));
        this.addField(new data_define_1.FloatData('DIE_HT', 'Height of die in WF_UNITS', ValueNotes_R4));
        this.addField(new data_define_1.FloatData('DIE_WID', 'Width of die in WF_UNITS', ValueNotes_R4));
        this.addField(new data_define_1.UInt8Data('WF_UNITS', 'Units for wafer and die dimensions', ValueNotes_WF_UNITS));
        this.addField(new data_define_1.FixedStringData('WF_FLAT', 'Orientation of wafer flat', ValueNotes_WF_FLAT, 1));
        this.addField(new data_define_1.Int16Data('CENTER_X', 'X coordinate of center die on wafer', ValueNotes_I2));
        this.addField(new data_define_1.Int16Data('CENTER_Y', 'Y coordinate of center die on wafer', ValueNotes_I2));
        this.addField(new data_define_1.FixedStringData('POS_X', 'Positive X direction of wafer', ValueNotes_WF_FLAT, 1));
        this.addField(new data_define_1.FixedStringData('POS_Y', 'Positive Y direction of wafer', ValueNotes_WF_FLAT, 1));
    }
}
exports.default = WCRRecord;
