"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_define_1 = require("../data-define");
const _1 = require(".");
function ValueNotes_SITE_GRP() {
    if (this.value === 255) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
function ValueNotes_U4() {
    if (this.value === 4294967295) {
        return _1.FIELD_VALUE_INVALID_DEFAULT;
    }
    return this.value.toString();
}
class WRRRecord extends _1.RecordBase {
    constructor() {
        super('WRR', _1.RecordType.REC_TYPE_2, _1.RecordSub.REC_SUB_20, 'Wafer Results Record');
        this.addField(new data_define_1.UInt8Data('HEAD_NUM', 'Test head number'));
        this.addField(new data_define_1.UInt8Data('SITE_GRP', 'Site group number', ValueNotes_SITE_GRP));
        this.addField(new data_define_1.DateData('FINISH_T', 'Date and time last part tested'));
        this.addField(new data_define_1.UInt32Data('PART_CNT', 'Number of parts tested'));
        this.addField(new data_define_1.UInt32Data('RTST_CNT', 'Number of parts retested', ValueNotes_U4));
        this.addField(new data_define_1.UInt32Data('ABRT_CNT', 'Number of aborts during testing', ValueNotes_U4));
        this.addField(new data_define_1.UInt32Data('GOOD_CNT', 'Number of good (passed) parts tested', ValueNotes_U4));
        this.addField(new data_define_1.UInt32Data('FUNC_CNT', 'Number of functional parts tested', ValueNotes_U4));
        this.addField(new data_define_1.VariableStringData('WAFER_ID', 'Wafer ID'));
        this.addField(new data_define_1.VariableStringData('FABWF_ID', 'Fab wafer ID'));
        this.addField(new data_define_1.VariableStringData('FRAME_ID', 'Wafer frame ID'));
        this.addField(new data_define_1.VariableStringData('MASK_ID', 'Wafer mask ID'));
        this.addField(new data_define_1.VariableStringData('USR_DESC', 'Wafer description supplied by user'));
        this.addField(new data_define_1.VariableStringData('EXC_DESC', 'Wafer description supplied by exec'));
    }
}
exports.default = WRRRecord;
